/*
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.PaymentStripeWebhookRequestData;
import java.io.IOException;

/**
 * PaymentStripeWebhookRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-05T17:10:47.666Z")
public class PaymentStripeWebhookRequest {
  @SerializedName("request")
  private Object request = null;

  @SerializedName("livemode")
  private Boolean livemode = null;

  @SerializedName("data")
  private PaymentStripeWebhookRequestData data = null;

  @SerializedName("created")
  private Integer created = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("api_version")
  private String apiVersion = null;

  @SerializedName("pending_webhooks")
  private Integer pendingWebhooks = null;

  @SerializedName("object")
  private String object = null;

  public PaymentStripeWebhookRequest request(Object request) {
    this.request = request;
    return this;
  }

   /**
   * Get request
   * @return request
  **/
  @ApiModelProperty(value = "")
  public Object getRequest() {
    return request;
  }

  public void setRequest(Object request) {
    this.request = request;
  }

  public PaymentStripeWebhookRequest livemode(Boolean livemode) {
    this.livemode = livemode;
    return this;
  }

   /**
   * Get livemode
   * @return livemode
  **/
  @ApiModelProperty(value = "")
  public Boolean isLivemode() {
    return livemode;
  }

  public void setLivemode(Boolean livemode) {
    this.livemode = livemode;
  }

  public PaymentStripeWebhookRequest data(PaymentStripeWebhookRequestData data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public PaymentStripeWebhookRequestData getData() {
    return data;
  }

  public void setData(PaymentStripeWebhookRequestData data) {
    this.data = data;
  }

  public PaymentStripeWebhookRequest created(Integer created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public Integer getCreated() {
    return created;
  }

  public void setCreated(Integer created) {
    this.created = created;
  }

  public PaymentStripeWebhookRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PaymentStripeWebhookRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public PaymentStripeWebhookRequest apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * Get apiVersion
   * @return apiVersion
  **/
  @ApiModelProperty(value = "")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public PaymentStripeWebhookRequest pendingWebhooks(Integer pendingWebhooks) {
    this.pendingWebhooks = pendingWebhooks;
    return this;
  }

   /**
   * Get pendingWebhooks
   * @return pendingWebhooks
  **/
  @ApiModelProperty(value = "")
  public Integer getPendingWebhooks() {
    return pendingWebhooks;
  }

  public void setPendingWebhooks(Integer pendingWebhooks) {
    this.pendingWebhooks = pendingWebhooks;
  }

  public PaymentStripeWebhookRequest object(String object) {
    this.object = object;
    return this;
  }

   /**
   * Get object
   * @return object
  **/
  @ApiModelProperty(value = "")
  public String getObject() {
    return object;
  }

  public void setObject(String object) {
    this.object = object;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentStripeWebhookRequest paymentStripeWebhookRequest = (PaymentStripeWebhookRequest) o;
    return Objects.equals(this.request, paymentStripeWebhookRequest.request) &&
        Objects.equals(this.livemode, paymentStripeWebhookRequest.livemode) &&
        Objects.equals(this.data, paymentStripeWebhookRequest.data) &&
        Objects.equals(this.created, paymentStripeWebhookRequest.created) &&
        Objects.equals(this.id, paymentStripeWebhookRequest.id) &&
        Objects.equals(this.type, paymentStripeWebhookRequest.type) &&
        Objects.equals(this.apiVersion, paymentStripeWebhookRequest.apiVersion) &&
        Objects.equals(this.pendingWebhooks, paymentStripeWebhookRequest.pendingWebhooks) &&
        Objects.equals(this.object, paymentStripeWebhookRequest.object);
  }

  @Override
  public int hashCode() {
    return Objects.hash(request, livemode, data, created, id, type, apiVersion, pendingWebhooks, object);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentStripeWebhookRequest {\n");
    
    sb.append("    request: ").append(toIndentedString(request)).append("\n");
    sb.append("    livemode: ").append(toIndentedString(livemode)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    pendingWebhooks: ").append(toIndentedString(pendingWebhooks)).append("\n");
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

