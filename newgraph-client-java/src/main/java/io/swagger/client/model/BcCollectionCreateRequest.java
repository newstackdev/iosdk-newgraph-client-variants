/*
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.BcCollectionCreateRequestTemplateFields;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * BcCollectionCreateRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-10-05T17:10:47.666Z")
public class BcCollectionCreateRequest {
  @SerializedName("mkt_fee")
  private BigDecimal mktFee = null;

  @SerializedName("template_name")
  private String templateName = null;

  @SerializedName("template_fields")
  private List<BcCollectionCreateRequestTemplateFields> templateFields = new ArrayList<BcCollectionCreateRequestTemplateFields>();

  @SerializedName("xferable")
  private Boolean xferable = null;

  @SerializedName("max_supply")
  private BigDecimal maxSupply = null;

  @SerializedName("allow_notify")
  private Boolean allowNotify = null;

  @SerializedName("burnable")
  private Boolean burnable = null;

  @SerializedName("schema_name")
  private String schemaName = null;

  @SerializedName("schema_fields")
  private List<BcCollectionCreateRequestTemplateFields> schemaFields = new ArrayList<BcCollectionCreateRequestTemplateFields>();

  @SerializedName("user")
  private String user = null;

  @SerializedName("user_prv_active_key")
  private String userPrvActiveKey = null;

  @SerializedName("collection_name")
  private String collectionName = null;

  public BcCollectionCreateRequest mktFee(BigDecimal mktFee) {
    this.mktFee = mktFee;
    return this;
  }

   /**
   * Get mktFee
   * @return mktFee
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMktFee() {
    return mktFee;
  }

  public void setMktFee(BigDecimal mktFee) {
    this.mktFee = mktFee;
  }

  public BcCollectionCreateRequest templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

   /**
   * Get templateName
   * @return templateName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }

  public BcCollectionCreateRequest templateFields(List<BcCollectionCreateRequestTemplateFields> templateFields) {
    this.templateFields = templateFields;
    return this;
  }

  public BcCollectionCreateRequest addTemplateFieldsItem(BcCollectionCreateRequestTemplateFields templateFieldsItem) {
    this.templateFields.add(templateFieldsItem);
    return this;
  }

   /**
   * Get templateFields
   * @return templateFields
  **/
  @ApiModelProperty(required = true, value = "")
  public List<BcCollectionCreateRequestTemplateFields> getTemplateFields() {
    return templateFields;
  }

  public void setTemplateFields(List<BcCollectionCreateRequestTemplateFields> templateFields) {
    this.templateFields = templateFields;
  }

  public BcCollectionCreateRequest xferable(Boolean xferable) {
    this.xferable = xferable;
    return this;
  }

   /**
   * Get xferable
   * @return xferable
  **/
  @ApiModelProperty(value = "")
  public Boolean isXferable() {
    return xferable;
  }

  public void setXferable(Boolean xferable) {
    this.xferable = xferable;
  }

  public BcCollectionCreateRequest maxSupply(BigDecimal maxSupply) {
    this.maxSupply = maxSupply;
    return this;
  }

   /**
   * Get maxSupply
   * @return maxSupply
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getMaxSupply() {
    return maxSupply;
  }

  public void setMaxSupply(BigDecimal maxSupply) {
    this.maxSupply = maxSupply;
  }

  public BcCollectionCreateRequest allowNotify(Boolean allowNotify) {
    this.allowNotify = allowNotify;
    return this;
  }

   /**
   * Get allowNotify
   * @return allowNotify
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowNotify() {
    return allowNotify;
  }

  public void setAllowNotify(Boolean allowNotify) {
    this.allowNotify = allowNotify;
  }

  public BcCollectionCreateRequest burnable(Boolean burnable) {
    this.burnable = burnable;
    return this;
  }

   /**
   * Get burnable
   * @return burnable
  **/
  @ApiModelProperty(value = "")
  public Boolean isBurnable() {
    return burnable;
  }

  public void setBurnable(Boolean burnable) {
    this.burnable = burnable;
  }

  public BcCollectionCreateRequest schemaName(String schemaName) {
    this.schemaName = schemaName;
    return this;
  }

   /**
   * Get schemaName
   * @return schemaName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSchemaName() {
    return schemaName;
  }

  public void setSchemaName(String schemaName) {
    this.schemaName = schemaName;
  }

  public BcCollectionCreateRequest schemaFields(List<BcCollectionCreateRequestTemplateFields> schemaFields) {
    this.schemaFields = schemaFields;
    return this;
  }

  public BcCollectionCreateRequest addSchemaFieldsItem(BcCollectionCreateRequestTemplateFields schemaFieldsItem) {
    this.schemaFields.add(schemaFieldsItem);
    return this;
  }

   /**
   * Get schemaFields
   * @return schemaFields
  **/
  @ApiModelProperty(required = true, value = "")
  public List<BcCollectionCreateRequestTemplateFields> getSchemaFields() {
    return schemaFields;
  }

  public void setSchemaFields(List<BcCollectionCreateRequestTemplateFields> schemaFields) {
    this.schemaFields = schemaFields;
  }

  public BcCollectionCreateRequest user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }

  public BcCollectionCreateRequest userPrvActiveKey(String userPrvActiveKey) {
    this.userPrvActiveKey = userPrvActiveKey;
    return this;
  }

   /**
   * Get userPrvActiveKey
   * @return userPrvActiveKey
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserPrvActiveKey() {
    return userPrvActiveKey;
  }

  public void setUserPrvActiveKey(String userPrvActiveKey) {
    this.userPrvActiveKey = userPrvActiveKey;
  }

  public BcCollectionCreateRequest collectionName(String collectionName) {
    this.collectionName = collectionName;
    return this;
  }

   /**
   * Get collectionName
   * @return collectionName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCollectionName() {
    return collectionName;
  }

  public void setCollectionName(String collectionName) {
    this.collectionName = collectionName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BcCollectionCreateRequest bcCollectionCreateRequest = (BcCollectionCreateRequest) o;
    return Objects.equals(this.mktFee, bcCollectionCreateRequest.mktFee) &&
        Objects.equals(this.templateName, bcCollectionCreateRequest.templateName) &&
        Objects.equals(this.templateFields, bcCollectionCreateRequest.templateFields) &&
        Objects.equals(this.xferable, bcCollectionCreateRequest.xferable) &&
        Objects.equals(this.maxSupply, bcCollectionCreateRequest.maxSupply) &&
        Objects.equals(this.allowNotify, bcCollectionCreateRequest.allowNotify) &&
        Objects.equals(this.burnable, bcCollectionCreateRequest.burnable) &&
        Objects.equals(this.schemaName, bcCollectionCreateRequest.schemaName) &&
        Objects.equals(this.schemaFields, bcCollectionCreateRequest.schemaFields) &&
        Objects.equals(this.user, bcCollectionCreateRequest.user) &&
        Objects.equals(this.userPrvActiveKey, bcCollectionCreateRequest.userPrvActiveKey) &&
        Objects.equals(this.collectionName, bcCollectionCreateRequest.collectionName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mktFee, templateName, templateFields, xferable, maxSupply, allowNotify, burnable, schemaName, schemaFields, user, userPrvActiveKey, collectionName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BcCollectionCreateRequest {\n");
    
    sb.append("    mktFee: ").append(toIndentedString(mktFee)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateFields: ").append(toIndentedString(templateFields)).append("\n");
    sb.append("    xferable: ").append(toIndentedString(xferable)).append("\n");
    sb.append("    maxSupply: ").append(toIndentedString(maxSupply)).append("\n");
    sb.append("    allowNotify: ").append(toIndentedString(allowNotify)).append("\n");
    sb.append("    burnable: ").append(toIndentedString(burnable)).append("\n");
    sb.append("    schemaName: ").append(toIndentedString(schemaName)).append("\n");
    sb.append("    schemaFields: ").append(toIndentedString(schemaFields)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    userPrvActiveKey: ").append(toIndentedString(userPrvActiveKey)).append("\n");
    sb.append("    collectionName: ").append(toIndentedString(collectionName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

