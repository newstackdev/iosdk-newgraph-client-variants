/* 
 * newgraph-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ReportUpdateRequest {
  #[serde(rename = "reason")]
  reason: String,
  #[serde(rename = "targetId")]
  target_id: String,
  #[serde(rename = "comment")]
  comment: Option<String>
}

impl ReportUpdateRequest {
  pub fn new(reason: String, target_id: String) -> ReportUpdateRequest {
    ReportUpdateRequest {
      reason: reason,
      target_id: target_id,
      comment: None
    }
  }

  pub fn set_reason(&mut self, reason: String) {
    self.reason = reason;
  }

  pub fn with_reason(mut self, reason: String) -> ReportUpdateRequest {
    self.reason = reason;
    self
  }

  pub fn reason(&self) -> &String {
    &self.reason
  }


  pub fn set_target_id(&mut self, target_id: String) {
    self.target_id = target_id;
  }

  pub fn with_target_id(mut self, target_id: String) -> ReportUpdateRequest {
    self.target_id = target_id;
    self
  }

  pub fn target_id(&self) -> &String {
    &self.target_id
  }


  pub fn set_comment(&mut self, comment: String) {
    self.comment = Some(comment);
  }

  pub fn with_comment(mut self, comment: String) -> ReportUpdateRequest {
    self.comment = Some(comment);
    self
  }

  pub fn comment(&self) -> Option<&String> {
    self.comment.as_ref()
  }

  pub fn reset_comment(&mut self) {
    self.comment = None;
  }

}



