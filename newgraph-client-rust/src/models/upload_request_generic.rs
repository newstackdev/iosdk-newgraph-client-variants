/* 
 * newgraph-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct UploadRequestGeneric {
  #[serde(rename = "filename")]
  filename: String,
  #[serde(rename = "targetId")]
  target_id: String,
  #[serde(rename = "contentType")]
  content_type: String
}

impl UploadRequestGeneric {
  pub fn new(filename: String, target_id: String, content_type: String) -> UploadRequestGeneric {
    UploadRequestGeneric {
      filename: filename,
      target_id: target_id,
      content_type: content_type
    }
  }

  pub fn set_filename(&mut self, filename: String) {
    self.filename = filename;
  }

  pub fn with_filename(mut self, filename: String) -> UploadRequestGeneric {
    self.filename = filename;
    self
  }

  pub fn filename(&self) -> &String {
    &self.filename
  }


  pub fn set_target_id(&mut self, target_id: String) {
    self.target_id = target_id;
  }

  pub fn with_target_id(mut self, target_id: String) -> UploadRequestGeneric {
    self.target_id = target_id;
    self
  }

  pub fn target_id(&self) -> &String {
    &self.target_id
  }


  pub fn set_content_type(&mut self, content_type: String) {
    self.content_type = content_type;
  }

  pub fn with_content_type(mut self, content_type: String) -> UploadRequestGeneric {
    self.content_type = content_type;
    self
  }

  pub fn content_type(&self) -> &String {
    &self.content_type
  }


}



