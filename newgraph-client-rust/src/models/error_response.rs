/* 
 * newgraph-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ErrorResponse {
  #[serde(rename = "errorMessage")]
  error_message: Option<String>,
  #[serde(rename = "errorCode")]
  error_code: Option<String>,
  #[serde(rename = "statusCode")]
  status_code: Option<f32>
}

impl ErrorResponse {
  pub fn new() -> ErrorResponse {
    ErrorResponse {
      error_message: None,
      error_code: None,
      status_code: None
    }
  }

  pub fn set_error_message(&mut self, error_message: String) {
    self.error_message = Some(error_message);
  }

  pub fn with_error_message(mut self, error_message: String) -> ErrorResponse {
    self.error_message = Some(error_message);
    self
  }

  pub fn error_message(&self) -> Option<&String> {
    self.error_message.as_ref()
  }

  pub fn reset_error_message(&mut self) {
    self.error_message = None;
  }

  pub fn set_error_code(&mut self, error_code: String) {
    self.error_code = Some(error_code);
  }

  pub fn with_error_code(mut self, error_code: String) -> ErrorResponse {
    self.error_code = Some(error_code);
    self
  }

  pub fn error_code(&self) -> Option<&String> {
    self.error_code.as_ref()
  }

  pub fn reset_error_code(&mut self) {
    self.error_code = None;
  }

  pub fn set_status_code(&mut self, status_code: f32) {
    self.status_code = Some(status_code);
  }

  pub fn with_status_code(mut self, status_code: f32) -> ErrorResponse {
    self.status_code = Some(status_code);
    self
  }

  pub fn status_code(&self) -> Option<&f32> {
    self.status_code.as_ref()
  }

  pub fn reset_status_code(&mut self) {
    self.status_code = None;
  }

}



