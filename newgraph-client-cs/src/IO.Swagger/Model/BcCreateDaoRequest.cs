/* 
 * newgraph-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// BcCreateDaoRequest
    /// </summary>
    [DataContract]
    public partial class BcCreateDaoRequest :  IEquatable<BcCreateDaoRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BcCreateDaoRequest" /> class.
        /// </summary>
        /// <param name="descr">descr.</param>
        /// <param name="authprPrvKey">authprPrvKey.</param>
        /// <param name="author">author.</param>
        /// <param name="token">token.</param>
        public BcCreateDaoRequest(string descr = default(string), string authprPrvKey = default(string), string author = default(string), string token = default(string))
        {
            this.Descr = descr;
            this.AuthprPrvKey = authprPrvKey;
            this.Author = author;
            this.Token = token;
        }
        
        /// <summary>
        /// Gets or Sets Descr
        /// </summary>
        [DataMember(Name="descr", EmitDefaultValue=false)]
        public string Descr { get; set; }

        /// <summary>
        /// Gets or Sets AuthprPrvKey
        /// </summary>
        [DataMember(Name="authpr_prv_key", EmitDefaultValue=false)]
        public string AuthprPrvKey { get; set; }

        /// <summary>
        /// Gets or Sets Author
        /// </summary>
        [DataMember(Name="author", EmitDefaultValue=false)]
        public string Author { get; set; }

        /// <summary>
        /// Gets or Sets Token
        /// </summary>
        [DataMember(Name="token", EmitDefaultValue=false)]
        public string Token { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BcCreateDaoRequest {\n");
            sb.Append("  Descr: ").Append(Descr).Append("\n");
            sb.Append("  AuthprPrvKey: ").Append(AuthprPrvKey).Append("\n");
            sb.Append("  Author: ").Append(Author).Append("\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BcCreateDaoRequest);
        }

        /// <summary>
        /// Returns true if BcCreateDaoRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of BcCreateDaoRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BcCreateDaoRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Descr == input.Descr ||
                    (this.Descr != null &&
                    this.Descr.Equals(input.Descr))
                ) && 
                (
                    this.AuthprPrvKey == input.AuthprPrvKey ||
                    (this.AuthprPrvKey != null &&
                    this.AuthprPrvKey.Equals(input.AuthprPrvKey))
                ) && 
                (
                    this.Author == input.Author ||
                    (this.Author != null &&
                    this.Author.Equals(input.Author))
                ) && 
                (
                    this.Token == input.Token ||
                    (this.Token != null &&
                    this.Token.Equals(input.Token))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Descr != null)
                    hashCode = hashCode * 59 + this.Descr.GetHashCode();
                if (this.AuthprPrvKey != null)
                    hashCode = hashCode * 59 + this.AuthprPrvKey.GetHashCode();
                if (this.Author != null)
                    hashCode = hashCode * 59 + this.Author.GetHashCode();
                if (this.Token != null)
                    hashCode = hashCode * 59 + this.Token.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
