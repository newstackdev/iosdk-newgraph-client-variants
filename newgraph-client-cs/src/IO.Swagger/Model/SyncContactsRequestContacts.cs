/* 
 * newgraph-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SyncContactsRequestContacts
    /// </summary>
    [DataContract]
    public partial class SyncContactsRequestContacts :  IEquatable<SyncContactsRequestContacts>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SyncContactsRequestContacts" /> class.
        /// </summary>
        /// <param name="birthday">birthday.</param>
        /// <param name="identifier">identifier.</param>
        /// <param name="androidAccountName">androidAccountName.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="prefix">prefix.</param>
        /// <param name="givenName">givenName.</param>
        /// <param name="jobTitle">jobTitle.</param>
        /// <param name="phones">phones.</param>
        /// <param name="avatar">avatar.</param>
        /// <param name="suffix">suffix.</param>
        /// <param name="postalAddresses">postalAddresses.</param>
        /// <param name="emails">emails.</param>
        /// <param name="androidAccountType">androidAccountType.</param>
        /// <param name="familyName">familyName.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="company">company.</param>
        /// <param name="androidAccountTypeRaw">androidAccountTypeRaw.</param>
        public SyncContactsRequestContacts(string birthday = default(string), string identifier = default(string), string androidAccountName = default(string), string displayName = default(string), string prefix = default(string), string givenName = default(string), string jobTitle = default(string), List<SyncContactsRequestPhones> phones = default(List<SyncContactsRequestPhones>), string avatar = default(string), string suffix = default(string), List<SyncContactsRequestPostalAddresses> postalAddresses = default(List<SyncContactsRequestPostalAddresses>), List<SyncContactsRequestPhones> emails = default(List<SyncContactsRequestPhones>), string androidAccountType = default(string), string familyName = default(string), string middleName = default(string), string company = default(string), string androidAccountTypeRaw = default(string))
        {
            this.Birthday = birthday;
            this.Identifier = identifier;
            this.AndroidAccountName = androidAccountName;
            this.DisplayName = displayName;
            this.Prefix = prefix;
            this.GivenName = givenName;
            this.JobTitle = jobTitle;
            this.Phones = phones;
            this.Avatar = avatar;
            this.Suffix = suffix;
            this.PostalAddresses = postalAddresses;
            this.Emails = emails;
            this.AndroidAccountType = androidAccountType;
            this.FamilyName = familyName;
            this.MiddleName = middleName;
            this.Company = company;
            this.AndroidAccountTypeRaw = androidAccountTypeRaw;
        }
        
        /// <summary>
        /// Gets or Sets Birthday
        /// </summary>
        [DataMember(Name="birthday", EmitDefaultValue=false)]
        public string Birthday { get; set; }

        /// <summary>
        /// Gets or Sets Identifier
        /// </summary>
        [DataMember(Name="identifier", EmitDefaultValue=false)]
        public string Identifier { get; set; }

        /// <summary>
        /// Gets or Sets AndroidAccountName
        /// </summary>
        [DataMember(Name="androidAccountName", EmitDefaultValue=false)]
        public string AndroidAccountName { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name="displayName", EmitDefaultValue=false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets Prefix
        /// </summary>
        [DataMember(Name="prefix", EmitDefaultValue=false)]
        public string Prefix { get; set; }

        /// <summary>
        /// Gets or Sets GivenName
        /// </summary>
        [DataMember(Name="givenName", EmitDefaultValue=false)]
        public string GivenName { get; set; }

        /// <summary>
        /// Gets or Sets JobTitle
        /// </summary>
        [DataMember(Name="jobTitle", EmitDefaultValue=false)]
        public string JobTitle { get; set; }

        /// <summary>
        /// Gets or Sets Phones
        /// </summary>
        [DataMember(Name="phones", EmitDefaultValue=false)]
        public List<SyncContactsRequestPhones> Phones { get; set; }

        /// <summary>
        /// Gets or Sets Avatar
        /// </summary>
        [DataMember(Name="avatar", EmitDefaultValue=false)]
        public string Avatar { get; set; }

        /// <summary>
        /// Gets or Sets Suffix
        /// </summary>
        [DataMember(Name="suffix", EmitDefaultValue=false)]
        public string Suffix { get; set; }

        /// <summary>
        /// Gets or Sets PostalAddresses
        /// </summary>
        [DataMember(Name="postalAddresses", EmitDefaultValue=false)]
        public List<SyncContactsRequestPostalAddresses> PostalAddresses { get; set; }

        /// <summary>
        /// Gets or Sets Emails
        /// </summary>
        [DataMember(Name="emails", EmitDefaultValue=false)]
        public List<SyncContactsRequestPhones> Emails { get; set; }

        /// <summary>
        /// Gets or Sets AndroidAccountType
        /// </summary>
        [DataMember(Name="androidAccountType", EmitDefaultValue=false)]
        public string AndroidAccountType { get; set; }

        /// <summary>
        /// Gets or Sets FamilyName
        /// </summary>
        [DataMember(Name="familyName", EmitDefaultValue=false)]
        public string FamilyName { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name="middleName", EmitDefaultValue=false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets Company
        /// </summary>
        [DataMember(Name="company", EmitDefaultValue=false)]
        public string Company { get; set; }

        /// <summary>
        /// Gets or Sets AndroidAccountTypeRaw
        /// </summary>
        [DataMember(Name="androidAccountTypeRaw", EmitDefaultValue=false)]
        public string AndroidAccountTypeRaw { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SyncContactsRequestContacts {\n");
            sb.Append("  Birthday: ").Append(Birthday).Append("\n");
            sb.Append("  Identifier: ").Append(Identifier).Append("\n");
            sb.Append("  AndroidAccountName: ").Append(AndroidAccountName).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Prefix: ").Append(Prefix).Append("\n");
            sb.Append("  GivenName: ").Append(GivenName).Append("\n");
            sb.Append("  JobTitle: ").Append(JobTitle).Append("\n");
            sb.Append("  Phones: ").Append(Phones).Append("\n");
            sb.Append("  Avatar: ").Append(Avatar).Append("\n");
            sb.Append("  Suffix: ").Append(Suffix).Append("\n");
            sb.Append("  PostalAddresses: ").Append(PostalAddresses).Append("\n");
            sb.Append("  Emails: ").Append(Emails).Append("\n");
            sb.Append("  AndroidAccountType: ").Append(AndroidAccountType).Append("\n");
            sb.Append("  FamilyName: ").Append(FamilyName).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  Company: ").Append(Company).Append("\n");
            sb.Append("  AndroidAccountTypeRaw: ").Append(AndroidAccountTypeRaw).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SyncContactsRequestContacts);
        }

        /// <summary>
        /// Returns true if SyncContactsRequestContacts instances are equal
        /// </summary>
        /// <param name="input">Instance of SyncContactsRequestContacts to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SyncContactsRequestContacts input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Birthday == input.Birthday ||
                    (this.Birthday != null &&
                    this.Birthday.Equals(input.Birthday))
                ) && 
                (
                    this.Identifier == input.Identifier ||
                    (this.Identifier != null &&
                    this.Identifier.Equals(input.Identifier))
                ) && 
                (
                    this.AndroidAccountName == input.AndroidAccountName ||
                    (this.AndroidAccountName != null &&
                    this.AndroidAccountName.Equals(input.AndroidAccountName))
                ) && 
                (
                    this.DisplayName == input.DisplayName ||
                    (this.DisplayName != null &&
                    this.DisplayName.Equals(input.DisplayName))
                ) && 
                (
                    this.Prefix == input.Prefix ||
                    (this.Prefix != null &&
                    this.Prefix.Equals(input.Prefix))
                ) && 
                (
                    this.GivenName == input.GivenName ||
                    (this.GivenName != null &&
                    this.GivenName.Equals(input.GivenName))
                ) && 
                (
                    this.JobTitle == input.JobTitle ||
                    (this.JobTitle != null &&
                    this.JobTitle.Equals(input.JobTitle))
                ) && 
                (
                    this.Phones == input.Phones ||
                    this.Phones != null &&
                    this.Phones.SequenceEqual(input.Phones)
                ) && 
                (
                    this.Avatar == input.Avatar ||
                    (this.Avatar != null &&
                    this.Avatar.Equals(input.Avatar))
                ) && 
                (
                    this.Suffix == input.Suffix ||
                    (this.Suffix != null &&
                    this.Suffix.Equals(input.Suffix))
                ) && 
                (
                    this.PostalAddresses == input.PostalAddresses ||
                    this.PostalAddresses != null &&
                    this.PostalAddresses.SequenceEqual(input.PostalAddresses)
                ) && 
                (
                    this.Emails == input.Emails ||
                    this.Emails != null &&
                    this.Emails.SequenceEqual(input.Emails)
                ) && 
                (
                    this.AndroidAccountType == input.AndroidAccountType ||
                    (this.AndroidAccountType != null &&
                    this.AndroidAccountType.Equals(input.AndroidAccountType))
                ) && 
                (
                    this.FamilyName == input.FamilyName ||
                    (this.FamilyName != null &&
                    this.FamilyName.Equals(input.FamilyName))
                ) && 
                (
                    this.MiddleName == input.MiddleName ||
                    (this.MiddleName != null &&
                    this.MiddleName.Equals(input.MiddleName))
                ) && 
                (
                    this.Company == input.Company ||
                    (this.Company != null &&
                    this.Company.Equals(input.Company))
                ) && 
                (
                    this.AndroidAccountTypeRaw == input.AndroidAccountTypeRaw ||
                    (this.AndroidAccountTypeRaw != null &&
                    this.AndroidAccountTypeRaw.Equals(input.AndroidAccountTypeRaw))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Birthday != null)
                    hashCode = hashCode * 59 + this.Birthday.GetHashCode();
                if (this.Identifier != null)
                    hashCode = hashCode * 59 + this.Identifier.GetHashCode();
                if (this.AndroidAccountName != null)
                    hashCode = hashCode * 59 + this.AndroidAccountName.GetHashCode();
                if (this.DisplayName != null)
                    hashCode = hashCode * 59 + this.DisplayName.GetHashCode();
                if (this.Prefix != null)
                    hashCode = hashCode * 59 + this.Prefix.GetHashCode();
                if (this.GivenName != null)
                    hashCode = hashCode * 59 + this.GivenName.GetHashCode();
                if (this.JobTitle != null)
                    hashCode = hashCode * 59 + this.JobTitle.GetHashCode();
                if (this.Phones != null)
                    hashCode = hashCode * 59 + this.Phones.GetHashCode();
                if (this.Avatar != null)
                    hashCode = hashCode * 59 + this.Avatar.GetHashCode();
                if (this.Suffix != null)
                    hashCode = hashCode * 59 + this.Suffix.GetHashCode();
                if (this.PostalAddresses != null)
                    hashCode = hashCode * 59 + this.PostalAddresses.GetHashCode();
                if (this.Emails != null)
                    hashCode = hashCode * 59 + this.Emails.GetHashCode();
                if (this.AndroidAccountType != null)
                    hashCode = hashCode * 59 + this.AndroidAccountType.GetHashCode();
                if (this.FamilyName != null)
                    hashCode = hashCode * 59 + this.FamilyName.GetHashCode();
                if (this.MiddleName != null)
                    hashCode = hashCode * 59 + this.MiddleName.GetHashCode();
                if (this.Company != null)
                    hashCode = hashCode * 59 + this.Company.GetHashCode();
                if (this.AndroidAccountTypeRaw != null)
                    hashCode = hashCode * 59 + this.AndroidAccountTypeRaw.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
