/* 
 * newgraph-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// BcCreateDaoProposal
    /// </summary>
    [DataContract]
    public partial class BcCreateDaoProposal :  IEquatable<BcCreateDaoProposal>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BcCreateDaoProposal" /> class.
        /// </summary>
        /// <param name="summary">summary.</param>
        /// <param name="voteStart">voteStart.</param>
        /// <param name="daoId">daoId.</param>
        /// <param name="daoOwner">daoOwner.</param>
        /// <param name="voteEnd">voteEnd.</param>
        /// <param name="title">title.</param>
        /// <param name="url">url.</param>
        public BcCreateDaoProposal(string summary = default(string), string voteStart = default(string), string daoId = default(string), string daoOwner = default(string), string voteEnd = default(string), string title = default(string), string url = default(string))
        {
            this.Summary = summary;
            this.VoteStart = voteStart;
            this.DaoId = daoId;
            this.DaoOwner = daoOwner;
            this.VoteEnd = voteEnd;
            this.Title = title;
            this.Url = url;
        }
        
        /// <summary>
        /// Gets or Sets Summary
        /// </summary>
        [DataMember(Name="summary", EmitDefaultValue=false)]
        public string Summary { get; set; }

        /// <summary>
        /// Gets or Sets VoteStart
        /// </summary>
        [DataMember(Name="vote_start", EmitDefaultValue=false)]
        public string VoteStart { get; set; }

        /// <summary>
        /// Gets or Sets DaoId
        /// </summary>
        [DataMember(Name="dao_id", EmitDefaultValue=false)]
        public string DaoId { get; set; }

        /// <summary>
        /// Gets or Sets DaoOwner
        /// </summary>
        [DataMember(Name="dao_owner", EmitDefaultValue=false)]
        public string DaoOwner { get; set; }

        /// <summary>
        /// Gets or Sets VoteEnd
        /// </summary>
        [DataMember(Name="vote_end", EmitDefaultValue=false)]
        public string VoteEnd { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BcCreateDaoProposal {\n");
            sb.Append("  Summary: ").Append(Summary).Append("\n");
            sb.Append("  VoteStart: ").Append(VoteStart).Append("\n");
            sb.Append("  DaoId: ").Append(DaoId).Append("\n");
            sb.Append("  DaoOwner: ").Append(DaoOwner).Append("\n");
            sb.Append("  VoteEnd: ").Append(VoteEnd).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BcCreateDaoProposal);
        }

        /// <summary>
        /// Returns true if BcCreateDaoProposal instances are equal
        /// </summary>
        /// <param name="input">Instance of BcCreateDaoProposal to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BcCreateDaoProposal input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Summary == input.Summary ||
                    (this.Summary != null &&
                    this.Summary.Equals(input.Summary))
                ) && 
                (
                    this.VoteStart == input.VoteStart ||
                    (this.VoteStart != null &&
                    this.VoteStart.Equals(input.VoteStart))
                ) && 
                (
                    this.DaoId == input.DaoId ||
                    (this.DaoId != null &&
                    this.DaoId.Equals(input.DaoId))
                ) && 
                (
                    this.DaoOwner == input.DaoOwner ||
                    (this.DaoOwner != null &&
                    this.DaoOwner.Equals(input.DaoOwner))
                ) && 
                (
                    this.VoteEnd == input.VoteEnd ||
                    (this.VoteEnd != null &&
                    this.VoteEnd.Equals(input.VoteEnd))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Summary != null)
                    hashCode = hashCode * 59 + this.Summary.GetHashCode();
                if (this.VoteStart != null)
                    hashCode = hashCode * 59 + this.VoteStart.GetHashCode();
                if (this.DaoId != null)
                    hashCode = hashCode * 59 + this.DaoId.GetHashCode();
                if (this.DaoOwner != null)
                    hashCode = hashCode * 59 + this.DaoOwner.GetHashCode();
                if (this.VoteEnd != null)
                    hashCode = hashCode * 59 + this.VoteEnd.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
