/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * BcCreateWhitelistDaoProposal.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_BcCreateWhitelistDaoProposal_H_
#define IO_SWAGGER_CLIENT_MODEL_BcCreateWhitelistDaoProposal_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  BcCreateWhitelistDaoProposal
    : public ModelBase
{
public:
    BcCreateWhitelistDaoProposal();
    virtual ~BcCreateWhitelistDaoProposal();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BcCreateWhitelistDaoProposal members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getQuantity() const;
    bool quantityIsSet() const;
    void unsetQuantity();
    void setQuantity(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProposer() const;
    bool proposerIsSet() const;
    void unsetProposer();
    void setProposer(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVoteStart() const;
    bool voteStartIsSet() const;
    void unsetVote_start();
    void setVoteStart(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDaoId() const;
    bool daoIdIsSet() const;
    void unsetDao_id();
    void setDaoId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDaoOwner() const;
    bool daoOwnerIsSet() const;
    void unsetDao_owner();
    void setDaoOwner(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getVoteEnd() const;
    bool voteEndIsSet() const;
    void unsetVote_end();
    void setVoteEnd(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUser() const;
    bool userIsSet() const;
    void unsetUser();
    void setUser(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getProposerPrvKey() const;
    bool proposerPrvKeyIsSet() const;
    void unsetProposer_prv_key();
    void setProposerPrvKey(utility::string_t value);

protected:
    utility::string_t m_Quantity;
    bool m_QuantityIsSet;
    utility::string_t m_Proposer;
    bool m_ProposerIsSet;
    utility::string_t m_Vote_start;
    bool m_Vote_startIsSet;
    utility::string_t m_Dao_id;
    bool m_Dao_idIsSet;
    utility::string_t m_Dao_owner;
    bool m_Dao_ownerIsSet;
    utility::string_t m_Vote_end;
    bool m_Vote_endIsSet;
    utility::string_t m_User;
    bool m_UserIsSet;
    utility::string_t m_Proposer_prv_key;
    bool m_Proposer_prv_keyIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_BcCreateWhitelistDaoProposal_H_ */
