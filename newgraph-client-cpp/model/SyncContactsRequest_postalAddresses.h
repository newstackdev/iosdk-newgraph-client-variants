/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * SyncContactsRequest_postalAddresses.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_SyncContactsRequest_postalAddresses_H_
#define IO_SWAGGER_CLIENT_MODEL_SyncContactsRequest_postalAddresses_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  SyncContactsRequest_postalAddresses
    : public ModelBase
{
public:
    SyncContactsRequest_postalAddresses();
    virtual ~SyncContactsRequest_postalAddresses();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SyncContactsRequest_postalAddresses members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCountry() const;
    bool countryIsSet() const;
    void unsetCountry();
    void setCountry(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCity() const;
    bool cityIsSet() const;
    void unsetCity();
    void setCity(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStreet() const;
    bool streetIsSet() const;
    void unsetStreet();
    void setStreet(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPostcode() const;
    bool postcodeIsSet() const;
    void unsetPostcode();
    void setPostcode(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLabel() const;
    bool labelIsSet() const;
    void unsetLabel();
    void setLabel(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRegion() const;
    bool regionIsSet() const;
    void unsetRegion();
    void setRegion(utility::string_t value);

protected:
    utility::string_t m_Country;
    bool m_CountryIsSet;
    utility::string_t m_City;
    bool m_CityIsSet;
    utility::string_t m_Street;
    bool m_StreetIsSet;
    utility::string_t m_Postcode;
    bool m_PostcodeIsSet;
    utility::string_t m_Label;
    bool m_LabelIsSet;
    utility::string_t m_Region;
    bool m_RegionIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_SyncContactsRequest_postalAddresses_H_ */
