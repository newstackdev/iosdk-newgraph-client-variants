/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CreativeSearchResponse__source.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_CreativeSearchResponse__source_H_
#define IO_SWAGGER_CLIENT_MODEL_CreativeSearchResponse__source_H_


#include "../ModelBase.h"

#include "CreativeSearchResponse__source_meta.h"
#include <cpprest/details/basic_types.h>
#include "Object.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreativeSearchResponse__source
    : public ModelBase
{
public:
    CreativeSearchResponse__source();
    virtual ~CreativeSearchResponse__source();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreativeSearchResponse__source members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getImage() const;
    bool imageIsSet() const;
    void unsetImage();
    void setImage(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CreativeSearchResponse__source_meta> getMeta() const;
    bool metaIsSet() const;
    void unsetMeta();
    void setMeta(std::shared_ptr<CreativeSearchResponse__source_meta> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getAesthetics() const;
    bool aestheticsIsSet() const;
    void unsetAesthetics();
    void setAesthetics(std::shared_ptr<Object> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Object> getContent() const;
    bool contentIsSet() const;
    void unsetContent();
    void setContent(std::shared_ptr<Object> value);

protected:
    utility::string_t m_Image;
    bool m_ImageIsSet;
    std::shared_ptr<CreativeSearchResponse__source_meta> m_Meta;
    bool m_MetaIsSet;
    std::shared_ptr<Object> m_Aesthetics;
    bool m_AestheticsIsSet;
    std::shared_ptr<Object> m_Content;
    bool m_ContentIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_CreativeSearchResponse__source_H_ */
