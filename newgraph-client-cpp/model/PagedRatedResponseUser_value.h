/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PagedRatedResponseUser_value.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_PagedRatedResponseUser_value_H_
#define IO_SWAGGER_CLIENT_MODEL_PagedRatedResponseUser_value_H_


#include "../ModelBase.h"

#include "PagedRatedResponseUser_rating.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  PagedRatedResponseUser_value
    : public ModelBase
{
public:
    PagedRatedResponseUser_value();
    virtual ~PagedRatedResponseUser_value();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PagedRatedResponseUser_value members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinTicker() const;
    bool newcoinTickerIsSet() const;
    void unsetNewcoinTicker();
    void setNewcoinTicker(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getYoutube() const;
    bool youtubeIsSet() const;
    void unsetYoutube();
    void setYoutube(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getPowered() const;
    bool poweredIsSet() const;
    void unsetPowered();
    void setPowered(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayName() const;
    bool displayNameIsSet() const;
    void unsetDisplayName();
    void setDisplayName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinAccTx() const;
    bool newcoinAccTxIsSet() const;
    void unsetNewcoinAccTx();
    void setNewcoinAccTx(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getLatitude() const;
    bool latitudeIsSet() const;
    void unsetLatitude();
    void setLatitude(double value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PagedRatedResponseUser_rating> getRating() const;
    bool ratingIsSet() const;
    void unsetRating();
    void setRating(std::shared_ptr<PagedRatedResponseUser_rating> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinPoolId() const;
    bool newcoinPoolIdIsSet() const;
    void unsetNewcoinPoolId();
    void setNewcoinPoolId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTumblr() const;
    bool tumblrIsSet() const;
    void unsetTumblr();
    void setTumblr(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getAspectRatio() const;
    bool aspectRatioIsSet() const;
    void unsetAspectRatio();
    void setAspectRatio(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getInstagram() const;
    bool instagramIsSet() const;
    void unsetInstagram();
    void setInstagram(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMedium() const;
    bool mediumIsSet() const;
    void unsetMedium();
    void setMedium(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinActivePublicKey() const;
    bool newcoinActivePublicKeyIsSet() const;
    void unsetNewcoinActivePublicKey();
    void setNewcoinActivePublicKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSoundcloud() const;
    bool soundcloudIsSet() const;
    void unsetSoundcloud();
    void setSoundcloud(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinPublicKey() const;
    bool newcoinPublicKeyIsSet() const;
    void unsetNewcoinPublicKey();
    void setNewcoinPublicKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getPowering() const;
    bool poweringIsSet() const;
    void unsetPowering();
    void setPowering(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSnapchat() const;
    bool snapchatIsSet() const;
    void unsetSnapchat();
    void setSnapchat(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getApple() const;
    bool appleIsSet() const;
    void unsetApple();
    void setApple(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTwitter() const;
    bool twitterIsSet() const;
    void unsetTwitter();
    void setTwitter(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinOwnerPublicKey() const;
    bool newcoinOwnerPublicKeyIsSet() const;
    void unsetNewcoinOwnerPublicKey();
    void setNewcoinOwnerPublicKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTiktok() const;
    bool tiktokIsSet() const;
    void unsetTiktok();
    void setTiktok(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getReddit() const;
    bool redditIsSet() const;
    void unsetReddit();
    void setReddit(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getYoutubeId() const;
    bool youtubeIdIsSet() const;
    void unsetYoutubeId();
    void setYoutubeId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getNewcoinPoolStake() const;
    bool newcoinPoolStakeIsSet() const;
    void unsetNewcoinPoolStake();
    void setNewcoinPoolStake(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContentType() const;
    bool contentTypeIsSet() const;
    void unsetContentType();
    void setContentType(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSignal() const;
    bool signalIsSet() const;
    void unsetSignal();
    void setSignal(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    double getLongitude() const;
    bool longitudeIsSet() const;
    void unsetLongitude();
    void setLongitude(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinPublisherPublicKey() const;
    bool newcoinPublisherPublicKeyIsSet() const;
    void unsetNewcoinPublisherPublicKey();
    void setNewcoinPublisherPublicKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWebsite() const;
    bool websiteIsSet() const;
    void unsetWebsite();
    void setWebsite(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCreated() const;
    bool createdIsSet() const;
    void unsetCreated();
    void setCreated(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSpotify() const;
    bool spotifyIsSet() const;
    void unsetSpotify();
    void setSpotify(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFacebook() const;
    bool facebookIsSet() const;
    void unsetFacebook();
    void setFacebook(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFacebookId() const;
    bool facebookIdIsSet() const;
    void unsetFacebookId();
    void setFacebookId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFullName() const;
    bool fullNameIsSet() const;
    void unsetFullName();
    void setFullName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTelegram() const;
    bool telegramIsSet() const;
    void unsetTelegram();
    void setTelegram(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPinterest() const;
    bool pinterestIsSet() const;
    void unsetPinterest();
    void setPinterest(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getVerifiedSocialIds();
    bool verifiedSocialIdsIsSet() const;
    void unsetVerifiedSocialIds();
    void setVerifiedSocialIds(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNewcoinPoolTx() const;
    bool newcoinPoolTxIsSet() const;
    void unsetNewcoinPoolTx();
    void setNewcoinPoolTx(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLicense() const;
    bool licenseIsSet() const;
    void unsetLicense();
    void setLicense(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContentUrl() const;
    bool contentUrlIsSet() const;
    void unsetContentUrl();
    void setContentUrl(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDiscord() const;
    bool discordIsSet() const;
    void unsetDiscord();
    void setDiscord(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBlurHash() const;
    bool blurHashIsSet() const;
    void unsetBlurHash();
    void setBlurHash(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getConsentEmail() const;
    bool consentEmailIsSet() const;
    void unsetConsentEmail();
    void setConsentEmail(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUpdated() const;
    bool updatedIsSet() const;
    void unsetUpdated();
    void setUpdated(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUsername() const;
    bool usernameIsSet() const;
    void unsetUsername();
    void setUsername(utility::string_t value);

protected:
    utility::string_t m_NewcoinTicker;
    bool m_NewcoinTickerIsSet;
    utility::string_t m_Youtube;
    bool m_YoutubeIsSet;
    double m_Powered;
    bool m_PoweredIsSet;
    utility::string_t m_DisplayName;
    bool m_DisplayNameIsSet;
    utility::string_t m_NewcoinAccTx;
    bool m_NewcoinAccTxIsSet;
    double m_Latitude;
    bool m_LatitudeIsSet;
    std::shared_ptr<PagedRatedResponseUser_rating> m_Rating;
    bool m_RatingIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_NewcoinPoolId;
    bool m_NewcoinPoolIdIsSet;
    utility::string_t m_Tumblr;
    bool m_TumblrIsSet;
    double m_AspectRatio;
    bool m_AspectRatioIsSet;
    utility::string_t m_Instagram;
    bool m_InstagramIsSet;
    utility::string_t m_Medium;
    bool m_MediumIsSet;
    utility::string_t m_NewcoinActivePublicKey;
    bool m_NewcoinActivePublicKeyIsSet;
    utility::string_t m_Soundcloud;
    bool m_SoundcloudIsSet;
    utility::string_t m_NewcoinPublicKey;
    bool m_NewcoinPublicKeyIsSet;
    double m_Powering;
    bool m_PoweringIsSet;
    utility::string_t m_Snapchat;
    bool m_SnapchatIsSet;
    utility::string_t m_Apple;
    bool m_AppleIsSet;
    utility::string_t m_Twitter;
    bool m_TwitterIsSet;
    utility::string_t m_NewcoinOwnerPublicKey;
    bool m_NewcoinOwnerPublicKeyIsSet;
    utility::string_t m_Tiktok;
    bool m_TiktokIsSet;
    utility::string_t m_Reddit;
    bool m_RedditIsSet;
    utility::string_t m_YoutubeId;
    bool m_YoutubeIdIsSet;
    utility::string_t m_Id;
    bool m_IdIsSet;
    double m_NewcoinPoolStake;
    bool m_NewcoinPoolStakeIsSet;
    utility::string_t m_ContentType;
    bool m_ContentTypeIsSet;
    utility::string_t m_Signal;
    bool m_SignalIsSet;
    double m_Longitude;
    bool m_LongitudeIsSet;
    utility::string_t m_NewcoinPublisherPublicKey;
    bool m_NewcoinPublisherPublicKeyIsSet;
    utility::string_t m_Website;
    bool m_WebsiteIsSet;
    utility::string_t m_Created;
    bool m_CreatedIsSet;
    utility::string_t m_Spotify;
    bool m_SpotifyIsSet;
    utility::string_t m_Facebook;
    bool m_FacebookIsSet;
    utility::string_t m_FacebookId;
    bool m_FacebookIdIsSet;
    utility::string_t m_FullName;
    bool m_FullNameIsSet;
    utility::string_t m_Telegram;
    bool m_TelegramIsSet;
    utility::string_t m_Pinterest;
    bool m_PinterestIsSet;
    std::vector<utility::string_t> m_VerifiedSocialIds;
    bool m_VerifiedSocialIdsIsSet;
    utility::string_t m_NewcoinPoolTx;
    bool m_NewcoinPoolTxIsSet;
    utility::string_t m_License;
    bool m_LicenseIsSet;
    utility::string_t m_ContentUrl;
    bool m_ContentUrlIsSet;
    utility::string_t m_Discord;
    bool m_DiscordIsSet;
    utility::string_t m_BlurHash;
    bool m_BlurHashIsSet;
    utility::string_t m_ConsentEmail;
    bool m_ConsentEmailIsSet;
    utility::string_t m_Updated;
    bool m_UpdatedIsSet;
    utility::string_t m_Username;
    bool m_UsernameIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_PagedRatedResponseUser_value_H_ */
