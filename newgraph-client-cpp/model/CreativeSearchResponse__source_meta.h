/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * CreativeSearchResponse__source_meta.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_CreativeSearchResponse__source_meta_H_
#define IO_SWAGGER_CLIENT_MODEL_CreativeSearchResponse__source_meta_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  CreativeSearchResponse__source_meta
    : public ModelBase
{
public:
    CreativeSearchResponse__source_meta();
    virtual ~CreativeSearchResponse__source_meta();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreativeSearchResponse__source_meta members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDate() const;
    bool dateIsSet() const;
    void unsetdate();
    void setDate(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSummary() const;
    bool summaryIsSet() const;
    void unsetSummary();
    void setSummary(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBlogName() const;
    bool blogNameIsSet() const;
    void unsetBlog_name();
    void setBlogName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getTags();
    bool tagsIsSet() const;
    void unsetTags();
    void setTags(std::vector<utility::string_t> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getShortUrl() const;
    bool shortUrlIsSet() const;
    void unsetShort_url();
    void setShortUrl(utility::string_t value);

protected:
    utility::string_t m_date;
    bool m_dateIsSet;
    utility::string_t m_Summary;
    bool m_SummaryIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_Blog_name;
    bool m_Blog_nameIsSet;
    std::vector<utility::string_t> m_Tags;
    bool m_TagsIsSet;
    utility::string_t m_Short_url;
    bool m_Short_urlIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_CreativeSearchResponse__source_meta_H_ */
