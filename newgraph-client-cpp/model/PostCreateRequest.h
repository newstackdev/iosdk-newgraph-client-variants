/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * PostCreateRequest.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_PostCreateRequest_H_
#define IO_SWAGGER_CLIENT_MODEL_PostCreateRequest_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  PostCreateRequest
    : public ModelBase
{
public:
    PostCreateRequest();
    virtual ~PostCreateRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PostCreateRequest members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLicense() const;
    bool licenseIsSet() const;
    void unsetLicense();
    void setLicense(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDoMint() const;
    bool doMintIsSet() const;
    void unsetDoMint();
    void setDoMint(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();
    void setDescription(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmbed() const;
    bool embedIsSet() const;
    void unsetEmbed();
    void setEmbed(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();
    void setTitle(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContentType() const;
    bool contentTypeIsSet() const;
    void unsetContentType();
    void setContentType(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContent() const;
    bool contentIsSet() const;
    void unsetContent();
    void setContent(utility::string_t value);

protected:
    utility::string_t m_License;
    bool m_LicenseIsSet;
    utility::string_t m_DoMint;
    bool m_DoMintIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_Embed;
    bool m_EmbedIsSet;
    utility::string_t m_Title;
    bool m_TitleIsSet;
    utility::string_t m_ContentType;
    bool m_ContentTypeIsSet;
    utility::string_t m_Content;
    bool m_ContentIsSet;
};

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_PostCreateRequest_H_ */
