/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * BcCollectionCreateRequest.h
 *
 * 
 */

#ifndef IO_SWAGGER_CLIENT_MODEL_BcCollectionCreateRequest_H_
#define IO_SWAGGER_CLIENT_MODEL_BcCollectionCreateRequest_H_


#include "../ModelBase.h"

#include "BcCollectionCreateRequest_template_fields.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  BcCollectionCreateRequest
    : public ModelBase
{
public:
    BcCollectionCreateRequest();
    virtual ~BcCollectionCreateRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// BcCollectionCreateRequest members

    /// <summary>
    /// 
    /// </summary>
    double getMktFee() const;
    bool mktFeeIsSet() const;
    void unsetMkt_fee();
    void setMktFee(double value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTemplateName() const;
        void setTemplateName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BcCollectionCreateRequest_template_fields>>& getTemplateFields();
        void setTemplateFields(std::vector<std::shared_ptr<BcCollectionCreateRequest_template_fields>> value);
    /// <summary>
    /// 
    /// </summary>
    bool isXferable() const;
    bool xferableIsSet() const;
    void unsetXferable();
    void setXferable(bool value);
    /// <summary>
    /// 
    /// </summary>
    double getMaxSupply() const;
    bool maxSupplyIsSet() const;
    void unsetMax_supply();
    void setMaxSupply(double value);
    /// <summary>
    /// 
    /// </summary>
    bool isAllowNotify() const;
    bool allowNotifyIsSet() const;
    void unsetAllow_notify();
    void setAllowNotify(bool value);
    /// <summary>
    /// 
    /// </summary>
    bool isBurnable() const;
    bool burnableIsSet() const;
    void unsetBurnable();
    void setBurnable(bool value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSchemaName() const;
        void setSchemaName(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<BcCollectionCreateRequest_template_fields>>& getSchemaFields();
        void setSchemaFields(std::vector<std::shared_ptr<BcCollectionCreateRequest_template_fields>> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUser() const;
        void setUser(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserPrvActiveKey() const;
        void setUserPrvActiveKey(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCollectionName() const;
        void setCollectionName(utility::string_t value);

protected:
    double m_Mkt_fee;
    bool m_Mkt_feeIsSet;
    utility::string_t m_Template_name;
        std::vector<std::shared_ptr<BcCollectionCreateRequest_template_fields>> m_Template_fields;
        bool m_Xferable;
    bool m_XferableIsSet;
    double m_Max_supply;
    bool m_Max_supplyIsSet;
    bool m_Allow_notify;
    bool m_Allow_notifyIsSet;
    bool m_Burnable;
    bool m_BurnableIsSet;
    utility::string_t m_Schema_name;
        std::vector<std::shared_ptr<BcCollectionCreateRequest_template_fields>> m_Schema_fields;
        utility::string_t m_User;
        utility::string_t m_User_prv_active_key;
        utility::string_t m_Collection_name;
    };

}
}
}
}

#endif /* IO_SWAGGER_CLIENT_MODEL_BcCollectionCreateRequest_H_ */
