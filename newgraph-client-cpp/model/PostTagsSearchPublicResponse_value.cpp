/**
 * newgraph-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-10-04T15:34:01Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.27.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "PostTagsSearchPublicResponse_value.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

PostTagsSearchPublicResponse_value::PostTagsSearchPublicResponse_value()
{
    m_Created = utility::conversions::to_string_t("");
    m_CreatedIsSet = false;
    m_Tag = utility::conversions::to_string_t("");
    m_TagIsSet = false;
}

PostTagsSearchPublicResponse_value::~PostTagsSearchPublicResponse_value()
{
}

void PostTagsSearchPublicResponse_value::validate()
{
    // TODO: implement validation
}

web::json::value PostTagsSearchPublicResponse_value::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_CreatedIsSet)
    {
        val[utility::conversions::to_string_t("created")] = ModelBase::toJson(m_Created);
    }
    if(m_TagIsSet)
    {
        val[utility::conversions::to_string_t("tag")] = ModelBase::toJson(m_Tag);
    }

    return val;
}

void PostTagsSearchPublicResponse_value::fromJson(web::json::value& val)
{
    if(val.has_field(utility::conversions::to_string_t("created")))
    {
        web::json::value& fieldValue = val[utility::conversions::to_string_t("created")];
        if(!fieldValue.is_null())
        {
            setCreated(ModelBase::stringFromJson(fieldValue));
        }
    }
    if(val.has_field(utility::conversions::to_string_t("tag")))
    {
        web::json::value& fieldValue = val[utility::conversions::to_string_t("tag")];
        if(!fieldValue.is_null())
        {
            setTag(ModelBase::stringFromJson(fieldValue));
        }
    }
}

void PostTagsSearchPublicResponse_value::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(m_CreatedIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("created"), m_Created));
        
    }
    if(m_TagIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + utility::conversions::to_string_t("tag"), m_Tag));
        
    }
}

void PostTagsSearchPublicResponse_value::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    if(multipart->hasContent(utility::conversions::to_string_t("created")))
    {
        setCreated(ModelBase::stringFromHttpContent(multipart->getContent(utility::conversions::to_string_t("created"))));
    }
    if(multipart->hasContent(utility::conversions::to_string_t("tag")))
    {
        setTag(ModelBase::stringFromHttpContent(multipart->getContent(utility::conversions::to_string_t("tag"))));
    }
}

utility::string_t PostTagsSearchPublicResponse_value::getCreated() const
{
    return m_Created;
}


void PostTagsSearchPublicResponse_value::setCreated(utility::string_t value)
{
    m_Created = value;
    m_CreatedIsSet = true;
}
bool PostTagsSearchPublicResponse_value::createdIsSet() const
{
    return m_CreatedIsSet;
}

void PostTagsSearchPublicResponse_value::unsetCreated()
{
    m_CreatedIsSet = false;
}

utility::string_t PostTagsSearchPublicResponse_value::getTag() const
{
    return m_Tag;
}


void PostTagsSearchPublicResponse_value::setTag(utility::string_t value)
{
    m_Tag = value;
    m_TagIsSet = true;
}
bool PostTagsSearchPublicResponse_value::tagIsSet() const
{
    return m_TagIsSet;
}

void PostTagsSearchPublicResponse_value::unsetTag()
{
    m_TagIsSet = false;
}

}
}
}
}

